[package]
name = "nidalee"
version = "1.0.0"
description = "Nidalee - 高性能、体积小巧的智能英雄联盟游戏助手"
authors = ["Nidalee Team <team@nidalee.com>"]
license = "MIT"
repository = "https://github.com/codexlin/Nidalee"
homepage = "https://github.com/codexlin/Nidalee"
documentation = "https://github.com/codexlin/Nidalee"
keywords = ["lol", "league-of-legends", "game", "assistant", "helper"]
categories = ["games"]
edition = "2021"
rust-version = "1.77.2"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[lib]
# The `_lib` suffix may seem redundant but it is necessary
# to make the lib name unique and wouldn't conflict with the bin name.
# This seems to be only an issue on Windows, see https://github.com/rust-lang/cargo/issues/8519
name = "nidalee_lib"
crate-type = ["staticlib", "cdylib", "rlib"]

[build-dependencies]
tauri-build = { version = "2.2.0", features = [] }

[dependencies]
serde_json = "1.0"
serde = { version = "1.0", features = ["derive"] }
log = "0.4"
tauri = { version = "2.5.0", features = ["tray-icon", "image-png"] }
tauri-plugin-log = "2.0.0-rc"
regex = "1.11.1"
reqwest = { version = "0.11", features = ["json", "rustls-tls"] }
base64 = "0.22"
tokio = { version = "1.0", features = ["full"] }
percent-encoding = "2.3"
sysinfo = "0.35.2"
once_cell = "1.21.3"
env_logger = "0.11"
futures-util = "0.3.31"
lazy_static = "1.5.0"


[features]
# this feature is used for production builds or when `devPath` points to the filesystem and the built-in dev server is disabled.
# If you use cargo directly instead of tauri's cli you can use this feature flag to switch between tauri's `dev` and `build` modes.
# DO NOT REMOVE!!
custom-protocol = ["tauri/custom-protocol"]

