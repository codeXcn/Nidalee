name: 🚀 Build and Release

on:
  push:
    branches: [ main, develop ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  test:
    name: 🧪 Test
    runs-on: ubuntu-latest
    steps:
      - name: 📦 Checkout repository
        uses: actions/checkout@v4

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          registry-url: 'https://registry.npmjs.org'

      - name: 📥 Setup pnpm (稳定版本)
        uses: pnpm/action-setup@v2
        with:
          version: 9.12.0  # 使用稳定的9.x版本而不是10.0.0
          run_install: false

      - name: 📂 Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: 🗄️ Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: 📦 Install dependencies
        run: pnpm install --no-frozen-lockfile

      - name: 🔍 Lint code
        run: pnpm run lint

      - name: 🏗️ Build frontend
        run: pnpm run build

  build-tauri:
    name: 🏗️ Build Tauri App
    needs: test
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, ubuntu-22.04, windows-latest]
        include:
          - platform: macos-latest
            target: x86_64-apple-darwin
            arch: x64
          - platform: ubuntu-22.04
            target: x86_64-unknown-linux-gnu
            arch: x64
          - platform: windows-latest
            target: x86_64-pc-windows-msvc
            arch: x64

    runs-on: ${{ matrix.platform }}
    steps:
      - name: 📦 Checkout repository
        uses: actions/checkout@v4

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          registry-url: 'https://registry.npmjs.org'

      - name: 📥 Setup pnpm (稳定版本)
        uses: pnpm/action-setup@v2
        with:
          version: 9.12.0  # 使用稳定版本
          run_install: false

      - name: 📂 Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: 🗄️ Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: 🦀 Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: 🗄️ Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'

      - name: 🐧 Install Linux dependencies
        if: matrix.platform == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf libxdo-dev libxcb-shape0-dev libxcb-xfixes0-dev

      - name: 📦 Install dependencies
        run: pnpm install --frozen-lockfile

      - name: 🏗️ Build Tauri app
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
          TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
        with:
          tagName: ${{ github.ref_name }}
          releaseName: 'Nidalee v__VERSION__'
          releaseBody: |
            🎉 Nidalee v__VERSION__ 发布！

            ## ✨ 新功能
            - 英雄联盟游戏助手核心功能
            - 实时游戏数据分析
            - 自动化功能支持
            - 多主题切换

            ## 📦 安装包

            ### Windows
            - `Nidalee_*_x64_zh-CN.msi` - Windows 安装程序（推荐）

            ### macOS
            - `Nidalee_*_x64.dmg` - macOS 磁盘映像

            ### Linux
            - `Nidalee_*_amd64.deb` - Debian/Ubuntu 软件包
            - `Nidalee_*_amd64.AppImage` - AppImage 通用包

            ## 🐛 问题反馈
            如遇到问题，请在 [Issues](https://github.com/codexlin/Nidalee/issues) 中反馈。

            ---

            **完整更新日志**: https://github.com/codexlin/Nidalee/compare/v__PREV_VERSION__...v__VERSION__
          releaseDraft: true
          prerelease: false
          includeDebug: false
          includeRelease: true

  # 只在推送标签时运行发布job
  release:
    name: 🚀 Release
    needs: build-tauri
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: 📦 Checkout repository
        uses: actions/checkout@v4

      - name: 🎉 Create Release
        run: |
          echo "✅ Release created for tag: ${{ github.ref_name }}"
          echo "🔗 Check releases at: https://github.com/${{ github.repository }}/releases"